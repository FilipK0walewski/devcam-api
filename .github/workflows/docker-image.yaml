name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install PostgreSQL Client
        run: sudo apt update && sudo apt install -y postgresql-client

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: until pg_isready -h localhost -p 5432 -U user; do echo waiting for postgres; sleep 2; done

      - name: Run tests
        env:
          DATABASE_URL: postgres://user:password@localhost:5432/testdb
          NODE_ENV: test
        run:
          source venv/bin/activate
          pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: registry.filipkowalewski.com
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: registry.filipkowalewski.com/devcam-api:latest